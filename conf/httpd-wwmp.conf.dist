# The best way to turn this into a working webwork server config file is to do
# a global find/replace on the following strings:
#	!WEBWORK_ROOT! -> the root of your personal webwork-modperl tree
#	!WEBWORK_USER! -> your user name
#	!WEBWORK_PORT! -> the port on which you want to run this server
#	                  (please use 10000 + your UID)
#	!PG_ROOT! -> the root of your personal pg tree

Include /usr/local/etc/apache/httpd-wwmp-header.conf

Port !WEBWORK_PORT!
User !WEBWORK_USER!
Group !WEBWORK_USER!

ServerAdmin !WEBWORK_USER!@localhost

LockFile !WEBWORK_ROOT!/logs/httpd.lock
PidFile !WEBWORK_ROOT!/logs/httpd.pid
ErrorLog !WEBWORK_ROOT!/logs/error.log

# On systems that use it, ScoreBoardFile must be different for different
# invocations of Apache.  webwork-dev doens't appear to be one of those
# systems.
#ScoreBoardFile /var/run/httpd.scoreboard

PerlFreshRestart On
<Location /webwork2>
    SetHandler perl-script
    PerlHandler Apache::WeBWorK

    PerlSetVar webwork_root !WEBWORK_ROOT!
    PerlSetVar pg_root !PG_ROOT!
    <Perl>
	use lib '!WEBWORK_ROOT!/lib';
	use lib '!PG_ROOT!/lib';
    </Perl>
</Location>

# We're limiting the number of children because we'll be running a lot and
# don't want to bog the development box down.
StartServers 2
MinSpareServers 2
MaxSpareServers 2
MaxClients 150
# How "old" a child is allowed to get.  0 for unlimited requests
# Pick a low number -- you're bound to screw something up, right?
MaxRequestsPerChild 100 

# This DocumentRoot doesn't actually make a lot of sense.  In a
# WeBWorK mod_perl system, there is no static document root, but the
# DocumentRoot does have to exist, and not have a subdirectory
# named "webwork2".  It suffices.
DocumentRoot "!WEBWORK_ROOT!/htdocs"

# This alias, however, is important.
Alias /webwork2_files/ !WEBWORK_ROOT!/htdocs/

# This should match the DocumentRoot
<Directory "!WEBWORK_ROOT!/htdocs">
    Options Indexes FollowSymLinks MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
