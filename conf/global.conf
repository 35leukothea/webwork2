################################################################################
# WeBWorK mod_perl (c) 1995-2002 WeBWorK Team, Univeristy of Rochester
# $Id: global.conf,v 1.17 2002-07-03 22:33:55 sh002i Exp $
################################################################################

# This file is used to set up the default WeBWorK course environment for all
# requests. Values may be overwritten by the course.conf for a specific course.
# All package variables set in this file are added to the course environment.
# If you wish to set a variable here but omit it from the course environment,
# use the "my" keyword. The following variables are available to this file:
#
#         $webworkRoot    directory that contains the WeBWorK distribution
#         $courseName     name of the course being used

# this hash defines the locations of directories needed by WeBWorK
%webworkDirs = (
	root    => "$webworkRoot",
	conf    => "$webworkRoot/conf",
	courses => "$webworkRoot/courses",
	lib     => "$webworkRoot/lib",
	tmp     => "$webworkRoot/tmp",
	macros  => "$webworkRoot/courseScripts",
);

# this hash defines the locations of files needed by WeBWorK
%webworkFiles = (
	environment => "$webworkDirs{conf}/global.conf",
);

# this hash defines URLs needed by WeBWorK
my $webworkURLRoot = "/webwork_files";
%webworkURLs = (
	base    => "$webworkURLRoot",
	logo    => "$webworkURLRoot/images/webwork_logo.gif",
	courses => "$webworkURLRoot/courses",
	docs    => "/webworkDocs",
);

# this hash defines the default locations for course subdirectories
my $courseRoot = "$webworkDirs{courses}/$courseName";
%courseDirs = (
	root        => "$courseRoot",
	DATA        => "$courseRoot/DATA",
	auth_DATA   => "$courseRoot/DATA/.auth",
	html        => "$courseRoot/html",
	html_images => "$courseRoot/html/images",
	html_temp   => "$courseRoot/html/tmp",
	logs        => "$courseRoot/logs",
	scoring     => "$courseRoot/scoring",
	templates   => "$courseRoot/templates",
	macros      => "$courseRoot/templates/macros",
);

# this hash defines the default locations for course files
%courseFiles = (
	environment => "$courseDirs{root}/course.conf",
);

# this hash defines default URLs
my $courseURLRoot = "$webworkURLs{courses}/$courseName";
%courseURLs = (
	base      => "$courseURLRoot",
	html      => "$courseURLRoot/html",
	html_temp => "$courseURLRoot/html/tmp",
);

%dbInfo = (
	auth_type        => "GDBM",
	auth_passwd_file => "$courseDirs{auth_DATA}/$courseName\_password_DB",
	auth_perm_file   => "$courseDirs{auth_DATA}/$courseName\_permissions_DB",
	auth_keys_file   => "$courseDirs{auth_DATA}/keys",
	wwdb_type        => "GDBM",
	wwdb_file        => "$courseDirs{DATA}/$courseName\_webwork_DB",
	cldb_type        => "GDBM",
	cldb_file        => "$courseDirs{DATA}/$courseName\_classlist_DB",
	psvn_digits      => 5,
);

%templates = (
	system => "$webworkDirs{conf}/system.template",
);

# sessionKeyTimeout defines length of inactivity before a key expires (seconds)
$sessionKeyTimeout = 60*30;

# Practice users are users who's names start with $practiceUser
# (you can comment this out to remove practice user support)
$practiceUserPrefix = "practice";

# There is a practice user who can be logged in multiple times.  He's
# commented out by default, though, so you don't hurt yourself.  It is
# kindof a backdoor to the practice user system, since he doesn't have a
# password.  Come to think of it, why do we even have this?!
#$debugPracticeUser = "practice666";

# This lets you specify a minimum permission level needed to perform
# certain actions.  In the current system, >=10 will allow a professor
# to perform the action, >=5 will allow a TA to, and >=0 will allow a
# student to perform an action (almost never what you want).
%permissionLevels = (
	"become_student" => 10,
);

# PG translation stuff
%pg = (
	options => {
		displayMode => "formattedText",
		grader      => "avg_problem_grader",
	},
	# modules lists module names and the packages each contains
	modules => {
		DynaLoader => [qw(DynaLoader)],
		Exporter   => [qw(Exporter)],
		GD         => [qw(GD)],
		
		AlgParser     => [qw(AlgParser AlgParserWithImplicitExpand Expr ExprWithImplicitExpand)],
		AnswerHash    => [qw(AnswerHash AnswerEvaluator)],
		Circle        => [qw(Circle)],
		Complex       => [qw(Complex)],
		Complex1      => [qw(Complex1)],
		Distributions => [qw(Distributions)],
		Fraction      => [qw(Fraction)],
		Fun           => [qw(Fun)],
		Hermite       => [qw(Hermite)],
		Label         => [qw(Label)],
		List          => [qw(List)],
		Match         => [qw(Match)],
		Matrix        => [qw(Matrix)],
		MatrixReal1   => [qw(MatrixReal1)],
		Multiple      => [qw(Multiple)],
		PGrandom      => [qw(PGrandom)],
		Regression    => [qw(Regression)],
		Select        => [qw(Select)],
		Units         => [qw(Units)],
		VectorField   => [qw(VectorField)],
		WWPlot        => [qw(WWPlot)],
	},
	# defaults used by answer evaluators
	ansEvalDefaults => {
		functAbsTolDefault            => .001,
		functLLimitDefault            => .0000001,
		functMaxConstantOfIntegration => 1E8,
		functNumOfPoints              => 3,
		functRelPercentTolDefault     => .1,
		functULimitDefault            => .9999999,
		functVarDefault               => "x",
		functZeroLevelDefault         => 1E-14,
		functZeroLevelTolDefault      => 1E-12,
		numAbsTolDefault              => .001,
		numFormatDefault              => "",
		numRelPercentTolDefault       => .1,
		numZeroLevelDefault           => 1E-14,
		numZeroLevelTolDefault        => 1E-12,
	},
);

%externalPrograms = (
	tth => "/usr/local/bin/tth",
);
