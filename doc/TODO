################################################################################
# WeBWorK mod_perl (c) 2000-2002 WeBWorK Project
# $Id: TODO,v 1.8 2002-08-23 18:30:03 sh002i Exp $
################################################################################

Son of WeBWorK - TODO list

OK	write template file from what we drew on the board
OK	normalize files:
		- (c) header on all files
		- standard order of preamble lines:
			1. (c) header
			
			2. package PACKAGENAME;
			
			3. short summary of the package (pod's NAME section)
			
			4. use - pragmatic modules
			5. use - standard perl modules
			6. use - CPAN modules
			7. use - webwork modules
		- ALWAYS use strict and use warnings
		- use "use base" rather than "our @ISA"
		- no warnings or errors!
		- (later on) POD documentation for all files
OK	fix templating code in ContentGenerator, add new escape functions
OK	implement the new template
OK	finish ProblemSets and ProblemSet
	
--------------------------------------------------------------------------------
	
DONE	New interface to PG.pm
	DONE	- instead of it accessing the database directly, accept $user,
		  $set, and $problem as arguments (instead of $setName, etc.)
	DONE	- UPDATE PG.pm'S DOCS!!!!!!!!!!!!!
	DONE	- Fix Problem.pm and Hardcopy.pm to work with the new interface
	
	Hardcopy generation
	DONE	- ad-hoc version of &latex2png in Hardcopy.pm (move later)
	DONE	- fix code (heh heh)
		- fix hardcopySetHeader
	
	Calling LaTeX/dvipng and PDFLaTeX in a nice way
		- create LaTeX.pm (?)
		- &latex2pdf
			- create secure tempdir
			- write hardcopy to tex file
			- call pdflatex
			- move resulting pdf file to tmp/hardcopy/whatever.pdf
			- remove tempdir
		- &latex2png (dvipng method)
			- create secure tempdir
			- write equations to tex file
			- call latex
			- run dvipng (as per ImageGenerator) on dvi file
			- move resulting images to tmp/dvipng/whatever.png
			- remove tempdir
	
	Integration of dvipng method of image generation
		- who the fuck knows...
		- choice between writing to a temporary TeX file from within
		  dangerousMacros, or queueing the equations up in RAM and
		  passing them out to the caller (via PG_flags?) who will then
		  call &latex2png
		- write tempfile from dangerousMacros
			- PRO: gets it out of RAM
			- PRO: no dependancies between equations
			- CON: have to coordinate between latex2png and
			       dangerous macros for tempfile locations
		- queue equations in RAM
			- PRO: all file access and external calls happen
			       outside of the safe compartment.
			- PRO: latex2png gets to decide where to put files
			- CON: stuff sits in RAM
			- CON: uses a package array to queue equations :p
	
DONE	display of screen set header in ProblemSet.pm (easy)
	make "enter" on the problem form trigger "submit answer", not "redisplay"
	remove "set" and "prob" from URL generation, remove s/^(set|prob)//;
	have logout button invalidate key
	add <!--#if can="blah" warning="1" error="1"-->
	handling of PG warnings (?!?!?!?!)
	Options
		- email address and password
		- or link to old system
	Feedback (or link to old system)
		- need nice modular way of sending email
	Pretty die messages
